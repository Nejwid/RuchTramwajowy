#include "Tramwaj.h"
#include "RodzajeTramwaj雕.h"
#include "Przystanek.h"

Tramwaj::Tramwaj(int nr) : czyJestNaTrasie(false), numerBoczny(nr) {}

void Tramwaj::UstawKurs(queue<pair<shared_ptr<Przystanek>, int>> rozk쓰d) { // ustawienie linii i godziny odjazdu
	if (!czyJestNaTrasie) {	
		this->pozosta쓴Przystanki = rozk쓰d;
		this->czyJestNaTrasie = true;
	} 
}

bool Tramwaj::Obs씃쯇asa쯘r雕() { // obs씃gujemy przystanek przez czas zale쯡y od modelu tramwaju
	this_thread::sleep_for(chrono::milliseconds(this->czasObs씃giPrzystanku*10)); 
	return true;
}

void Tramwaj::Jed륛alej() { // jedziemy do nastepnego przystanku przez czas podany w rozk쓰dzie jazdy
	this_thread::sleep_for(chrono::milliseconds(this->pozosta쓴Przystanki.front().second*100));
}


void Tramwaj::RealizujPrzystanek() { // dojechali랈y do nast渣nego przystanku
	
	pozosta쓴Przystanki.front().first->RealizujPrzystanek(this->czasObs씃giPrzystanku);
	
	pozosta쓴Przystanki.pop();
}

chrono::milliseconds Tramwaj::CzasPrzejazdu() { // pomiar czasu przejazdu
	this->pocz졊ek = chrono::steady_clock::now();

	while (!pozosta쓴Przystanki.empty()) {
		this->Jed륛alej();
		this->RealizujPrzystanek();
	}

	this->koniec = chrono::steady_clock::now();

	auto ca쓺owityCzas = chrono::duration_cast<chrono::milliseconds>(this->koniec - this->pocz졊ek);

	return ca쓺owityCzas;
}

void Tramwaj::Op縱nienie(int op縱nienie) { 
	this_thread::sleep_for(chrono::milliseconds(op縱nienie*10));
}
